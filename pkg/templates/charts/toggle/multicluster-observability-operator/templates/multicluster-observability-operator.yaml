apiVersion: apps/v1
kind: Deployment
metadata:
  name: multicluster-observability-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: multicluster-observability-operator
  strategy: {}
  template:
    metadata:
      labels:
        name: multicluster-observability-operator
        ocm-antiaffinity-selector: multicluster-observability-operator
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ocm-antiaffinity-selector
                  operator: In
                  values:
                  - multicluster-observability-operator
              topologyKey: topology.kubernetes.io/zone
            weight: 70
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: ocm-antiaffinity-selector
                  operator: In
                  values:
                  - multicluster-observability-operator
              topologyKey: kubernetes.io/hostname
            weight: 35
      containers:
      - args:
        - -leader-elect
        command:
        - mco-operator
        env:
{{- if .Values.hubconfig.proxyConfigs }}
        - name: HTTP_PROXY
          value: {{ .Values.hubconfig.proxyConfigs.HTTP_PROXY }}
        - name: HTTPS_PROXY
          value: {{ .Values.hubconfig.proxyConfigs.HTTPS_PROXY }}
        - name: NO_PROXY
          value: {{ .Values.hubconfig.proxyConfigs.NO_PROXY }}
{{- end }}
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['olm.targetNamespaces']
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OPERATOR_NAME
          value: multicluster-observability-operator
        - name: TEMPLATES_PATH
          value: /usr/local/manifests
        - name: SPOKE_NAMESPACE
          value: open-cluster-management-addon-observability
        image: '{{ .Values.global.imageOverrides.multicluster_observability_operator
          }}'
        imagePullPolicy: '{{ .Values.global.pullPolicy }}'
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - /usr/local/bin/prestop.sh
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: multicluster-observability-operator
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8383
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
          {{- if hasKey .Values.global.templateOverrides "multicluster_obs_operator_cpu_limit" }}
            cpu: {{ .Values.global.templateOverrides.multicluster_obs_operator_cpu_limit | quote }}
          {{- else }}
            cpu: 600m
          {{- end }}
          {{- if hasKey .Values.global.templateOverrides "multicluster_obs_operator_memory_limit" }}
            memory: {{ .Values.global.templateOverrides.multicluster_obs_operator_memory_limit | quote }}
          {{- else }}
            memory: 1Gi
          {{- end }}
          requests:
          {{- if hasKey .Values.global.templateOverrides "multicluster_obs_operator_cpu_request" }}
            cpu: {{ .Values.global.templateOverrides.multicluster_obs_operator_cpu_request | quote }}
          {{- else }}
            cpu: 100m
          {{- end }}
          {{- if hasKey .Values.global.templateOverrides "multicluster_obs_operator_memory_request" }}
            memory: {{ .Values.global.templateOverrides.multicluster_obs_operator_memory_request | quote }}
          {{- else }}
            memory: 128Mi
          {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      hostIPC: false
      hostNetwork: false
      hostPID: false
{{- if .Values.global.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.pullSecret }}
{{- end }}
{{- with .Values.hubconfig.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
      securityContext:
        runAsNonRoot: true
{{- if semverCompare ">=4.11.0" .Values.hubconfig.ocpVersion }}
        seccompProfile:
          type: RuntimeDefault
{{- end }}
      serviceAccountName: multicluster-observability-operator
{{- with .Values.hubconfig.tolerations }}
      tolerations:
      {{- range . }}
      - {{ if .Key }} key: {{ .Key }} {{- end }}
        {{ if .Operator }} operator: {{ .Operator }} {{- end }}
        {{ if .Value }} value: {{ .Value }} {{- end }}
        {{ if .Effect }} effect: {{ .Effect }} {{- end }}
        {{ if .TolerationSeconds }} tolerationSeconds: {{ .TolerationSeconds }} {{- end }}
        {{- end }}
{{- end }}
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: multicluster-observability-operator-webhook-server-cert
