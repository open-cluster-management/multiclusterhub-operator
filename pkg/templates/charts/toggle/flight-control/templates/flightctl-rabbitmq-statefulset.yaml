apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    flightctl.service: flightctl-rabbitmq
  name: flightctl-rabbitmq
  namespace: '{{ .Values.global.namespace }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      flightctl.service: flightctl-rabbitmq
  serviceName: flightctl-rabbitmq
  template:
    metadata:
      labels:
        flightctl.service: flightctl-rabbitmq
    spec:
      containers:
      - env:
        - name: RABBITMQ_DEFAULT_USER
          value: user
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              key: password
              name: flightctl-rabbitmq-auth
        - name: RABBITMQ_MNESIA_DIR
          value: /var/lib/rabbitmq/mnesia
        - name: KOLLA_CONFIG_STRATEGY
          value: COPY_ALWAYS
        image: docker.io/library/rabbitmq:3.13-management
        imagePullPolicy: IfNotPresent
        name: rabbitmq
        ports:
        - containerPort: 5672
          name: amqp
        - containerPort: 15672
          name: management
        - containerPort: 15692
          name: prom-target
        volumeMounts:
        - mountPath: /var/lib/rabbitmq/mnesia
          name: rabbitmq-data
        - mountPath: /var/lib/kolla/config_files/config.json
          name: kolla-rabbitmq-config
          subPath: config.json
      volumes:
      - configMap:
          name: kolla-rabbitmq-config
        name: kolla-rabbitmq-config
  volumeClaimTemplates:
  - metadata:
      annotations:
        kubernetes.io/reclaimPolicy: Delete
      name: rabbitmq-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: null
